apiVersion: v1
kind: ConfigMap
metadata:
  name: order-microservice-cm
data:
  application-dev.yaml: |-
    app:
      orderCount: 10
    server:
      port: 8222
    spring:
      datasource:
        url: jdbc:h2:mem:orders_db
      jpa:
        show-sql: true
        hibernate:
          ddl-auto: create
        properties:
          hibernate:
            format_sql: true
      info:
        app:
          name: orders-api
          description: API for managing orders
          version: 1.0.0
      management:
        endpoint:
          health:
            show-details: "ALWAYS"
          circuitbreakers:
            enabled: true 
        endpoints:
          web:
            exposure:
              include: "*"
        info:
          env:
            enabled: true     
        health:
          probes:
            enabled: true  
  application-qa.yaml: |-
    app:
      orderCount: 10
    server:
      port: 8333
    spring:
      datasource:
        url: jdbc:h2:mem:orders_db
      jpa:
        show-sql: true
        hibernate:
          ddl-auto: create
        properties:
          hibernate:
            format_sql: true
      info:
        app:
          name: orders-api
          description: API for managing orders
          version: 1.0.0
      management:
        endpoint:
          health:
            show-details: "ALWAYS"
          circuitbreakers:
            enabled: true 
        endpoints:
          web:
            exposure:
              include: "*"
        info:
          env:
            enabled: true     
        health:
          probes:
            enabled: true 
---
apiVersion: v1
kind: Secret
metadata:
  name: db-credentials
data:
  password: d2VsY29tZQ==
  username: c2E=
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: "order-microservice-dep"
  annotations:
    kubernetes.io/change-cause: "order-microservice with version 3.0.0"
spec:
  # modify replicas according to your case
  replicas: 2
  selector:
    matchLabels:
      app: "order-microservice"
  template:
    metadata:
      labels:
        app: "order-microservice"
    spec:
      containers:
      - name: "order-microservice"
        image: "classpathio/order-microservice:3.0.0"
        ports:
        - name: app
          containerPort:  8222
          protocol: TCP
        env:
        - name: SPRING_PROFILES_ACTIVE
          value: dev
        - name: SPRING_DATASOURCE_USERNAME
          valueFrom:
            secretKeyRef:
              name: db-credentials
              key: username 
        - name: SPRING_DATASOURCE_PASSWORD
          valueFrom:
            secretKeyRef:
              name: db-credentials
              key: password
        volumeMounts:
        - name: app-config
          mountPath: /app/config
      volumes:
        - name: app-config
          configMap:
            name: order-microservice-cm
---
apiVersion: v1
kind: Service
metadata:
  name: order-microservice-svc
spec:
  selector:
    app: "order-microservice"
  type: ClusterIP
  ports:
  - name: app
    protocol: TCP
    port: 80
    targetPort: 8222
--- 
apiVersion: networking.istio.io/v1
kind: Gateway
metadata:
  name: order-microservice-gateway
spec:
  selector:
    istio: ingressgateway
  servers:
  - port:
      number: 80
      name: http 
      protocol: HTTP 
    hosts:
    - "pradeep.classpath.io"

---          
# VirtualService
apiVersion: networking.istio.io/v1
kind: VirtualService
metadata:
  name: order-microservice
spec:
  hosts:
  - "pradeep.classpath.io"
  gateways:
  - order-microservice-gateway
  http:
  - match:
    - uri:
        prefix: /api/v1/orders
    route:
    - destination:
        host: order-microservice-svc.pradeep-ns.svc.cluster.local
        port:
          number: 80
         


